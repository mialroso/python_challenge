
'''PyPoll Instructions
In this Challenge, you are tasked with helping a small, rural U.S. town modernise its vote-counting process.

You will be given a set of poll data called election_data.csv. The dataset is composed of three columns: "Voter ID", "County", and "Candidate". Your task is to create a Python script that analyzes the votes and calculates each of the following values:

The total number of votes cast

A complete list of candidates who received votes

The percentage of votes each candidate won

The total number of votes each candidate won

The winner of the election based on popular vote

Your analysis should align with the following results:

Election Results
-------------------------
Total Votes: 369711
-------------------------
Charles Casper Stockham: 23.049% (85213)
Diana DeGette: 73.812% (272892)
Raymon Anthony Doane: 3.139% (11606)
-------------------------
Winner: Diana DeGett
-------------------------'''
import csv
import os

# Assign a variable to load a file from a path.
file_to_load = os.path.join("election_data.csv")
# Initialize a total vote counter.
total_votes = 0
# Candidate options and candidate votes.
candidate_options = []
candidate_votes = {}
# Track the winning candidate, vote count, and percentage.
winning_candidate = ""
winning_count = 0
winning_percentage = 0
# Open the election results and read the file.
with open(file_to_load) as election_data:
    file_reader = csv.reader(election_data)
     # Read the header row.
    headers = next(file_reader)
    # Print each row in the CSV file.
    for row in file_reader:
        # Add to the total vote count.
        total_votes += 1
        # Get the candidate name from each row.
        candidate_name = row[2]
        # If the candidate does not match any existing candidate, add the
        # the candidate list.
        if candidate_name not in candidate_options:
            # Add the candidate name to the candidate list.
            candidate_options.append(candidate_name)
            # And begin tracking that candidate's voter count.
            candidate_votes[candidate_name] = 0
            # Add a vote to that candidate's count.
            candidate_votes[candidate_name] += 1
    # Print the final vote count to the terminal.
    election_results = winning_candidate
print(f"Election Results")
print(f"-------------------------\n")
print(f"Total Votes: {total_votes:,}")
print(f"-------------------------\n")
print(f"{election_results}")


for candidate in candidate_votes:
        # Retrieve vote count and percentage.
    votes = candidate_votes[candidate]
    vote_percentage = float(votes) / float(total_votes) * 100

    if (votes > winning_count) and (vote_percentage > winning_percentage):
        winning_count = votes
        winning_candidate = candidate
        winning_percentage = vote_percentage

# THE TOTAL NUMBER OF VOTES CAST
VotesTotal = len(Candidates)

# A COMPLETE LIST OF CANDIDATES WHO RECEIVED VOTES
list_set = set(Candidates) 
CandidatesUnique = list(list_set)   # CONVERT SET TO THE LIST 

    # Print each candidate's voter count and percentage to the terminal.
    print(f"{candidate}: {vote_percentage:.1f}% ({votes:,})")
        # Print the winning candidate's results to the terminal.
    winning_candidate_summary = (f"-------------------------\n")
    print(f"Winner: {winning_candidate}")
    print(f"Winning Vote Count: {winning_count:,}")
    print(f"Winning Percentage: {winning_percentage}")
    print(f"-------------------------\n")
    
    
  

